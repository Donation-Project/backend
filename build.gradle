buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		// maven 에서 0.16.1 버전 처리 누락 이슈
		// https://github.com/asciidoctor/asciidoctor-gradle-plugin/issues/652
		classpath ("org.ysb33r.gradle:grolifant:0.16.2")
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'java'
	id 'jacoco'
}

jacoco {
	toolVersion = "0.8.7"
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//database
	implementation 'org.flywaydb:flyway-mysql'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//비밀번호 암호화 라이브러리
	implementation 'org.mindrot:jbcrypt:0.4'

	// Restdocs를 위한 의존성
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'


	//lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'

	//S3
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'


	//query dsl
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-jpa"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.enabled true
	}

	finalizedBy 'jacocoTestCoverageVerification'

	dependsOn test

	def Qdomains = []
	for (qPattern in "QA".."QZ") {  // qPattern = "*.QA","*.QB","*.QC", ... "*.QZ"
		Qdomains.add("com/donation/**/" + qPattern + "*.*")
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/donation/*.*",
					"com/donation/config/*.*",
					"com/donation/config/**/*.*",
			] + Qdomains)
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = false
			element = 'BUNDLE'

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}

			excludes = []
		}
	}

	finalizedBy 'asciidoctor'
}

bootJar {
	dependsOn asciidoctor

	copy {
		from asciidoctor.outputDir
		into 'src/main/resources/templates/docs'
	}
}

jar {
	enabled = false
}